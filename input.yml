---
- name: Ask user for the input
  hosts: localhost
  tags: always
  vars:
    defaults:
      server_name: ralgo
      dns_adblocking: false
    providers_map:
      - { name: Amazon EC2, alias: ec2 }
      - { name: "Install to existing Ubuntu 18.04 or 19.10 server (for more advanced users)", alias: local }
  vars_files:
    - config.cfg

  tasks:
    - block:
      - name: Cloud prompt
        pause:
          prompt: |
            What provider would you like to use?
              {% for p in providers_map %}
              {{ loop.index }}. {{ p['name'] }}
              {% endfor %}

            Enter the number of your desired provider
        register: _ralgo_provider
        when: provider is undefined

      - name: Set facts based on the input
        set_fact:
          ralgo_provider: "{{ provider | default(providers_map[_ralgo_provider.user_input|default(omit)|int - 1]['alias']) }}"

      - name: VPN server name prompt
        pause:
          prompt: |
            Name the vpn server
            [ralgo]
        register: _ralgo_server_name
        when:
          - server_name is undefined
          - ralgo_provider != "local"

      - name: DNS adblocking prompt
        pause:
          prompt: |
            Do you want to enable DNS ad blocking on this VPN server?
            [y/N]
        register: _dns_adblocking
        when: dns_adblocking is undefined

      - name: Set facts based on the input
        set_fact:
          ralgo_server_name: >-
            {% if server_name is defined %}{% set _server = server_name %}
            {%- elif _ralgo_server_name.user_input is defined and _ralgo_server_name.user_input|length > 0 -%}
            {%- set _server = _ralgo_server_name.user_input -%}
            {%- else %}{% set _server = defaults['server_name'] %}{% endif -%}
            {{ _server | regex_replace('(?!\.)(\W|_)', '-') }}
          ralgo_dns_adblocking: >-
            {% if dns_adblocking is defined %}{{ dns_adblocking | bool }}
            {%- elif _dns_adblocking.user_input is defined %}{{ booleans_map[_dns_adblocking.user_input] | default(defaults['dns_adblocking']) }}
            {%- else %}false{% endif %}
      rescue:
        - include_tasks: playbooks/rescue.yml
